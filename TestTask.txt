Тестовое задание.
 

Необходимо написать простое web-приложение с использованием node.js node-addon-api (C ) WinAPI для проверки наличия пользователя (например, Администратор) в списке пользователей операционной системы Windows.

Приложение должно работать по следующему сценарию

1. Пользователь запускает web-сервер из корня проекта:
server.bat
2. Автоматически открывается браузер с начальной web страницей, на которой отображаются
- поле ввода имени пользователя
- кнопка "Проверить"
3. Пользователь вводит любое имя пользователя и нажимает на "проверить"
4. Если введённый пользователь присутствует в списке пользователей Windows, отображается страница с надписью "Пользователь <имя_введённого_пользователя> есть", иначе "Пользователя <имя_введённого_пользователя> нет".
 Под надписью есть кнопка "Назад", при нажатии на которую происходит возврат на начальную страницу.
5. Проверку наличия введённого имени пользователя в списке пользователей ОС Windows запрещено проводить путём сравнения текущего пользователя, от которого запущен процесс сервера и введённого пользователя, а также 
запрещено использовать названия домашних каталогов пользователей в каталоге C:\Users (С:\Пользователи).

Список пользователей для проверки можно получить через Управление компьютером->Служебные программы->Локальные пользователи и группы->Пользователи.

6. В корне проекта создать файл README.MD с текстом тестового задания в кодировке UTF-8




Решение:


1. Установка зависимостей

npm install express node-addon-api




2. Создание файла server.js

const express = require('express');
const addon = require('./build/Release/addon');

const app = express();

app.get('/', (req, res) => {
  res.sendFile(__dirname + '/index.html');
});

app.post('/check-user', (req, res) => {
  const username = req.body.username;
  const result = addon.checkUser(username);

  if (result) {
    res.send(`Пользователь ${username} есть`);
  } else {
    res.send(`Пользователя ${username} нет`);
  }
});

app.listen(3000, () => {
  console.log('Server listening on port 3000');
});




3. Создание файла index.html

<!DOCTYPE html>
<html>
<head>
  <title>Проверка наличия пользователя в Windows</title>
</head>
<body>
  <h1>Проверка наличия пользователя в Windows</h1>
  <form action="/check-user" method="post">
    <label for="username">Имя пользователя:</label>
    <input type="text" id="username" name="username">
    <input type="submit" value="Проверить">
  </form>
</body>
</html>




4. Создание файла addon.cc

#include <node.h>
#include <windows.h>

using namespace v8;

Local<Value> CheckUser(const FunctionCallbackInfo<Value>& args) {
  Isolate* isolate = args.GetIsolate();

  if (args.Length() < 1 || !args[0]->IsString()) {
    isolate->ThrowException(Exception::TypeError(String::NewFromUtf8(isolate, "Неверный тип аргумента")));
    return Local<Value>();
  }

  String::Utf8Value username(args[0]);

  NET_API_STATUS status = NetUserGetInfo(NULL, *username, 1, &info);

  if (status == NERR_Success) {
    return Boolean::New(isolate, true);
  } else {
    return Boolean::New(isolate, false);
  }
}

void Init(Local<Object> exports) {
  NODE_SET_METHOD(exports, "checkUser", CheckUser);
}

NODE_MODULE(addon, Init)




5. Создание файла server.bat

node server.js



6. Создание файла README.MD

# Тестовое задание

## Задача

Разработать простое web-приложение с использованием node.js, node-addon-api (C) и WinAPI для проверки наличия пользователя (например, Администратор) в списке пользователей операционной системы Windows.

## Требования

* Приложение должно работать по следующему сценарию:
    * Пользователь запускает web-сервер из корня проекта:
      ```
      server.bat
      ```
    * Автоматически открывается браузер с начальной web страницей, на которой отображаются:
        * поле ввода имени пользователя
        * кнопка "Проверить"
    * Пользователь вводит любое имя пользователя и нажимает на "проверить"
    * Если введённый пользователь присутствует в списке пользователей Windows, отображается страница с надписью "Пользователь <имя_введённого_пользователя> есть", иначе "Пользователя <имя_введённого_пользователя> нет". Под надписью есть кнопка "Назад", при нажатии на которую происходит возврат на начальную страницу.
    * Проверку наличия введённого имени пользователя в списке пользователей ОС Windows запрещено проводить путём сравнения текущего пользователя, от которого запущен процесс сервера и введённого пользователя, а также запрещено использовать названия домашних каталогов пользователей в каталоге C:\Users (С:\Пользователи).
* Список пользователей для проверки можно получить через Управление компьютером->Служебные программы->Локальные пользователи и группы->Пользователи.
* В корне проекта создать файл README.MD с текстом тестового задания в кодировке UTF-8.

## Решение

1. Установка зависимостей

2. Создание файла `server.js`

3. Создание файла index.html

4. Создание файла addon.cc

5. Создание файла server.bat

6. Создание файла README.MD

# Тестовое задание

## Задача

Разработать простое web-приложение с использованием node.js, node-addon-api (C) и WinAPI